{"ast":null,"code":"import { HttpClientModule } from '@angular/common/http';\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { InMemoryCache, ApolloLink } from '@apollo/client/core';\nimport { setContext } from '@apollo/client/link/context';\nimport * as i0 from \"@angular/core\";\nconst uri = 'http://localhost:4021';\nlet token = '1111111';\nlet role = 'user';\nexport function createApollo(httpLink) {\n  const basic = setContext((operation, context) => ({\n    headers: {\n      Accept: 'charset=utf-8'\n    }\n  }));\n  const auth = setContext((operation, context) => {\n    return {\n      headers: {\n        Role: role,\n        Authorization: token\n      }\n    };\n  });\n  const link = ApolloLink.from([basic, auth, httpLink.create({\n    uri\n  })]);\n  const cache = new InMemoryCache();\n  return {\n    link,\n    cache\n  };\n}\nexport let GraphQLModule = /*#__PURE__*/(() => {\n  class GraphQLModule {}\n\n  GraphQLModule.ɵfac = function GraphQLModule_Factory(t) {\n    return new (t || GraphQLModule)();\n  };\n\n  GraphQLModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: GraphQLModule\n  });\n  GraphQLModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink]\n    }],\n    imports: [HttpClientModule]\n  });\n  return GraphQLModule;\n})();","map":null,"metadata":{},"sourceType":"module"}